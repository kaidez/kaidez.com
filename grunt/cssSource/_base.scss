//=================================================================
// _base.css:
// 
// This file contains only variables and mixins that will be applied
// to the production-ready 'styles.min.css'.  That's it...no more,
// no less.
// =================================================================



// =============
// ALL VARIABLES
// =============

// START PRIMARY COLOR PALETTE for kaidez.com, as defined by the azure sea 
// color palette at http://www.colourlovers.com/palette/2892492/azure_sea.
// Changing these colors will affect other parts of the site, as noted below.


// Site background color
$site-background-color: #fff;

// header background color
$header-color: #67CDDC;

// Base color for nav links. Affects the font color for desktops/laptops,
// background, color for big fat buttons that appear in the "mobile first"
// layout, bottom border color for the desktop/laptop header and top border 
// for the main navigation.
$base-link-color: #262841;

// Base color for page links in post content. Also effects the color of any and all pagination buttons.
$post-link-color: #3285A5;

// footer background color
$footer-color: #0C5E7E;

// aside background color
$aside-color: lighten($footer-color, 8);

// Darken the footer color: effects the all copy in the footer and the bottom
// border of the post snippets.
$darken-the-aside-color: darken($aside-color, 25);

// End color variables


// Font variables
$lato: "Lato"; // Google Font
$robo: "Roboto Condensed"; // A Google Font
$srf: sans-serif;

// Width varibles...mostly applied to the <main> tag and affects all content // sections.
$mobile-portrait-width: 290px; // Mobile
$mobile-landscape-width: 548px; // Mobile Landscape
$inner-content-width: 1024px; // Desktop

// master border-radius for the entire site
$master-border-radius: 10px;

// master shadow for the site's content element (i.e.: ".page-content")
$master-page-content-shadow: 1px 5px 7px 2px rgba(0,0,0,0.2); 





// Variables for the retina media queries start...they're used inside
// '_retinaMediaQuery.scss' 

// Mobile Retina: if the screen is retina-based AND is at least 320px. Targets mobiles and handhelds.
$mobile-retina:   
  "only screen and (-webkit-min-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (min--moz-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (-o-min-device-pixel-ratio: 2/1) and (max-width: 568px),
  only screen and (min-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (min-resolution: 192dpi) and (max-width: 568px),
  only screen and (min-resolution: 2dppx) and (max-width: 568px)";

// Mobile Non Retina: if the screen is not retina AND at least 320px. Targets mobiles and handhelds.
$mobile-non-retina:   
  "only screen and (max-width: 568px),
  only screen and (max-width: 568px),
  only screen and (max-width: 568px),
  only screen and (max-width: 568px),
  only screen and (max-width: 568px),
  only screen and (max-width: 568px)";

// Tablet/Desktop Retina: if the screen retina based AND is at least 569px
// wide. Targeting tablets and desktops.
$desktop-tablet-retina:   
  "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (-moz-min-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (-o-min-device-pixel-ratio: 2/1) and (min-width: 569px),
  only screen and (min-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (min-resolution: 192dpi) and (min-width: 569px),
  only screen and (min-resolution: 2dppx) and (min-width: 569px)";

// Tablet/Desktop: if the screen retina based AND is at least 569px wide. Targeting tablets and desktops.
$desktop-tablet-non-retina: "only screen and (min-width: 569px)";

// 'background-size' variable for any and all CSS classes that reference the sprites. You HAVE to do this is you're doubling the size of your image for retina purposes or the image will look weird.
$bg-size: 350px 123px;

// Variables for the retina media queries start

// =============
// Variables end
// =============





// =============
// Mix-ins start
// =============

// homepage logo link hit area..LARGE. Do one for the small versions
@mixin homepage-link($height, $width) {
  height: $height;
  width: $width;
}

// If a Google font is applied to a page element, the element should be hidden 
// on initial page load as well as set to either serif or another default font.
// After page load, the element should set to visibile, then load the Google 
// font. Two differnt events...use a mixin for both.
//
// Some CSS selectors call @fonts. They always need to be visible but do not // pass a visible parameter. In those instances, "visibility" is always set to // "visible."
@mixin fonts($font, $visibility: blank) {
  font-family: $font;
  @if $visibility != blank {
    visibility: visible;
  }
}

// Centers whatever is applied to it
@mixin master-center {
  margin: 0px auto; 
  text-align: center;
}

// Certain elements need this to ensure 100% height. Used in the
//'page-content' mixin below.
@mixin full-height {
  position: relative;
  height: auto;
  min-height: 100%;
}
 
// When possible, A better way accessibilty-wise to hidepage elements than // display:none or negative text indents.

// Read more over at Yahoo! Accessibilty Blog: 
// http://yaccessibilityblog.com/library/css-clip-hidden-content.html
@mixin hide-element {
  position:absolute;
  clip:rect(1px 1px 1px 1px);
}

// Shows menu on tablet and desktop page load
@mixin show-menu {
  display: block;
  min-height: 21px;
  font-size: 12px;
}
 
// style breadcrumbs
@mixin breadcrumb-styles($font-size, $side-padding) {
  font-size: $font-size;
  font-weight: 900;
  background-color: lighten($header-color, 27);
  max-width: $inner-content-width;
  position: relative;
  margin: 0 auto;
  padding: 8px $side-padding;
}

// style breadcrumb separator
@mixin breadcrumb-separator($side-padding, $font-size: blank) {
  padding:0 $side-padding;
  @if $font-size != blank {
     font-size: $font-size;
  }
}

// Define width for the <header>, <main> and <footer> elements by applying
// this mixin to a class that's applied to the element. The '$dimension'
// variable defines the width value and the values are determined by the
// "Width variables" directly below the mixin.
@mixin page-content($dimension) {
  max-width: $dimension;
  margin: 0 auto;
  padding: 15px 45px 58px;
  font-size: 18px;
  line-height: 30px;
  @include full-height;
  background-color: #fff;
  width: auto;
  text-align: left;
}

// Applies properties to sprite layouts...used in '_retinaMediaQuery.scss'
@mixin sprite-images ($img, $position, $height, $width) {
  background: url($img) no-repeat $position;
  background-size: $bg-size;
  height: $height;
  width: $width;
}

// All transitions 'ease in' in 0.3 seconds
@mixin transitions ($property) {
  -webkit-transition: $property .3s ease;
  -moz-transition: $property .3s ease;
  -o-transition: $property.3s ease;
  transition: $property .3s ease;
}

 // Unique styles for the 'site-title' class in the desktop styles...add this // to sprite mixin code.
@mixin desktop-logo-sprite-add-on {
  float: left;
  margin: 0;
  text-indent: -999px;
  display: block;
}

// outer wrapper for the <header> which wraps the link, nav & search elements
@mixin outer-wrapper-nav-header {
  width: auto;
  padding: 15px 45px 0;
  margin: 0 auto;
}

// <ul> container for the main nav  
@mixin site-navigation-list($display) {
  display: $display;
  margin: 0;
  padding: 0;
}

@mixin related-posts-header($font-size) {
  font-size: $font-size
}

// Applies border to post snippets on home page and search results.
@mixin bottomBorder ($color) {
  border-bottom: 1px solid $color;
 }

// style <h2> tags that appear in post snippets
@mixin content-h2($font-size) {
  font-size: ($font-size);
}

@mixin contact-form-field {

}

@mixin read-post-link($border-radius: blank) {
  @if $border-radius != blank {
    -webkit-border-radius: $border-radius;
    -moz-border-radius: $border-radius;
    border-radius: $border-radius;
  }
  color: #fff;
  display: block;
  padding:2px;
  margin-top: 14px;
  background-color: $post-link-color;
  max-width: 120px;
  float: none;
  text-align:center;
}

// the inner wrapper for the <header>
@mixin inner-wrapper-nav-header {
  max-width: $inner-content-width;
  margin: 0 auto;
}

// style <header> tag but it's only in one place right now and can go (maybe)
@mixin site-header {
  width:209px;
  float: left;
}

// wrap header elements 
@mixin top-level-header-wrapper {
  padding-top: 12px;
}

// <nav> tag
@mixin main-navigation {
  border: none;
  width: 555px;
}

// style wrapper for nav & search but it's only in one place right now and can go (maybe)
@mixin nav-search-style {
  float: right;
}

// link styles
@mixin link-styles($margin-right, $font-size, $padding, $base-color) {
  @include fonts($lato);
  margin-right: $margin-right; 
  font-size: $font-size;
  padding: $padding;
  color: $base-color;
  float: left;
  border: 0;
}

// Shared class for nav and searchbox elements on tablets
@mixin header-element-margin-tablet {
  margin: 0;  
}

// Styles for post and category <h1> tags
@mixin post-category-title($font-size, $padding: blank) {
  @include master-center;
  font-size: $font-size;
  @if $padding != blank {
    padding: $padding;
  }
}

// Add box-shadow to the site's content element (i.e.: ".page-content")
@mixin create-box-shadow {
  -webkit-box-shadow: inset 0 7px 16px rgba(0,0,0,0.2);
  -moz-box-shadow: inset0 7px 16px rgba(0,0,0,0.2);
  box-shadow: inset 0 7px 16px rgba(0,0,0,0.2);
}

// For the 'share post' sections on post pages. loads the Google 'Lato' font 
// by default...loads sans-serif on hand-helds.
@mixin share-post-link ($font: $lato) {
  font-size:16px;
  line-height: 1;
  font-family: $font;
}

// Applies a text shadow 
@mixin makeTextShadow($base-color) {
  color: darken($base-color, 27);
  text-shadow: 0px 2px 3px lighten($base-color, 9);
}

// Styles the link in the <aside> "LINKS" section
@mixin aside-nav-link {
  list-style-type: none;
  margin: 0;
  padding:0 5px 5px 0;
  height: 25px;
  font-size: 18px;
  display: block;
  color: $header-color;
  text-decoration: none;
}

// ============================================================================
// Pagination mixins start

// These mixins are styles that are for the most part, copied from the 
// pagination styles that are part of the Tipue search plugin. For clarity 
// site-speed optimaztion, it was easier to do this rather than apply the
// Tipue class names.
// ===========================================================================



// Containing pagination box
@mixin pagBox {
  margin: 60px 0 21px;
}

// <ul> item in search results
@mixin pagUL {
  padding: 0;
  margin: 0;
  font: 12px/1 'open sans', sans-serif;
}

// Individual <li> in search results
@mixin floatListItem {
  list-style: none;
  margin: 0;
  padding: 0;
  display: inline;
}

// Individual button in search results
@mixin pagButtonItem {
  color: #fff;
}

// Inner part of the individual button...makes it a hit area for the link
@mixin pagButtonInner {
  background-color: $post-link-color;
  color: #fff;
  padding: 7px 10px 8px;
  margin-right: 7px;
  text-decoration: none;
  text-align: center;
}

// Inner part of the 'selected' button...makes it a hit area for the link
@mixin pagButtonCurrent {
  background-color: $header-color;
  padding: 7px 10px 8px;
  margin-right: 7px;
  text-decoration: none;
  text-align: center;
}

// ============================================================================
// Pagination mixins end
// ============================================================================


// ============
//  Mix-ins end
// ============
