/*
 * =================================================================
 * _base.css:
 * 
 * This file contains only variables and mixins that will be applied
 * to the production-ready 'styles.min.css'.  That's it...no more,
 * no less.
 * =================================================================
 */


/*
 * ===============
 * Variables start
 * ===============
 */

// Color variables

/*
 * PRIMARY COLOR PALETTE for kaidez.com, as defined by the Shiba color
 * palette at http://www.colourlovers.com/palette/2901472/shiba. Changing 
 * these colors will affect other parts of the site, as noted below.
 */

// Site background color
$background-color: #ECDCC5;

// Site header color
$header-color: #CFBBA0;

/*
 * Base color for nav links. Font color for desktops/laptops...background
 * color for big, fat buttons that appear in the "mobile first" layout.
 */
$base-link-color: #310818;

/*
 * Base color for page links in post content. Also effects the color of any
 * and all pagination buttons.
 */
$link-color: #716B5B;

// Site footer color
$footer-color: #627C8D;

// PRIMARY COLOR PALETTE ends

/*
 * Darken the footer color: effects the all copy in the footer and the bottom
 * border of the post snippets.
 */
$darken-the-footer-color: darken($footer-color, 25);


// Font variables
$helv: "Lato";
$robo: "Roboto Condensed";
$srf: serif;

// Width varibles...affects the width of the "inner" containers on the page.
$mobile-portrait-width: 300px; // Mobile
$mobile-landscape-width: 548px; // Mobile Landscape
$tablet-width: 481px; // Tablet
$inner-content-width: 900px; // Desktop

/*
 * The width of the 'footer-sections': this is applied to the
 * 'getGutterWidth()' function below.
 */
$footer-column-width-desktop: 250px; 

  
/*
 * 'background-size' variable for any and all CSS classes that reference the
 * sprites. You HAVE to do this is you're doubling the size of your image for 
 * retina purposes or the image will look wierd.
 */
$bg-size: 350px 210px; 


// Tablet/Desktop: if the screen retina based AND is at least 569px wide:
$retina:   
  "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (min--moz-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (-o-min-device-pixel-ratio: 2/1) and (min-width: 569px),
  only screen and (min-device-pixel-ratio: 2) and (min-width: 569px),
  only screen and (min-resolution: 192dpi) and (min-width: 569px),
  only screen and (min-resolution: 2dppx) and (min-width: 569px)";

// Tablet/Desktop non-retina: if the screen retina based AND is at least 569px wide:
$desktop:   
  "only screen and (min-width: 569px),
  only screen and (min-width: 569px),
  only screen and (min-width: 569px),
  only screen and (min-width: 569px),
  only screen and (min-width: 569px),
  only screen and (min-width: 569px)";

// Mobile: if the screen is retina-based AND is no wider than 568px:
$mobile-retina:   
  "only screen and (-webkit-min-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (min--moz-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (-o-min-device-pixel-ratio: 2/1) and (max-width: 568px),
  only screen and (min-device-pixel-ratio: 2) and (max-width: 568px),
  only screen and (min-resolution: 192dpi) and (max-width: 568px),
  only screen and (min-resolution: 2dppx) and (max-width: 568px)";
 

/*
 * =============
 * Variables end
 * =============
 */

/*
=========================================================================
 */

/*
 * =============
 * Mix-ins start
 * =============
 */

/*
 * Loads whatever font the '$font' variable is set
 * to based on the font variables list above. 
 */
@mixin fonts($font) {
  font-family: $font;
}

// Centers whatever is applied to it
@mixin master-center {
  margin: 0px auto; 
  text-align: center;
}

// All of the main page elements need a padding of 10px
@mixin allElementPadding {
  padding: 10px;
}

// Certain elements need this to ensure 100% height
@mixin full-height {
  position: relative;
  height: auto;
  min-height: 100%;
}
 
/* 
 * When possible, A better way accessibilty-wise to
 * hidepage elements than display:none or negative
 * text indents.
 *
 * Yahoo! Accessibilty Blog:
 * http://yaccessibilityblog.com/library/css-clip-hidden-content.html
 */
@mixin hide-element {
  position:absolute;
  clip:rect(1px 1px 1px 1px);
}

// Shows menu on tablet and desktop page load
@mixin show-menu {
  display: block;
  padding:2px 0;
  min-height: 21px;
  width: 454px;
  font-size: 12px;
}

 /*
 * Define width for the <header>, <main> and <footer> elements by applying
 * this mixin to a class that's applied to the element. The '$dimension'
 * variable defines the width value and the values are determined by the
 * "Width variables" directly below the mixin.
 */
@mixin content-width($dimension) {
  max-width: $dimension;
  margin: 0 auto;
  padding:0 10px;
}
@mixin sprite-images ($img, $pos, $height, $width) {
  background: url($img) no-repeat $pos;
  background-size: $bg-size;
  height: $height;
  width: $width;
}

 /*
  * Unique styles for the 'site-title' class in the
  * desktop styles...add this to sprite mixin code
  */
 @mixin desktop-logo-sprite-add-on {
  float: left;
  margin: 0;
  text-indent: -999px;
  display: block;
}

 // Applies border to post snippets on home page and search results.
 @mixin bottomBorder ($color) {
   border-bottom: 1px solid $color;
 }

/*
 * ============================================================================
 * Pagination mixins
 *
 * These mixins are styles that are for the most part, copied from the 
 * pagination styles that are part of the Tipue search plugin. For clarity and * site-speed optimaztion, it was easier to do this rather than apply the
 * Tipue class names.
 * ============================================================================
 */

// Containing pagination box
@mixin pagBox {
  margin: 47px 0 31px 0;
}

// <ul> item in search results
@mixin pagUL {
  padding: 0;
  margin: 0;
  font: 12px/1 'open sans', sans-serif;
}

// Individual <li> in search results
@mixin floatListItem {
  list-style: none;
  margin: 0;
  padding: 0;
  display: inline;
}

// Individual button in search results
@mixin pagButtonItem {
  color: #fff;
}

// Inner part of the individual button...makes it a hit area for the link
@mixin pagButtonInner {
  background-color: $link-color;
  color: #fff;
  padding: 7px 10px 8px;
  margin-right: 7px;
  text-decoration: none;
  text-align: center;
}

// Inner part of the 'selected' button...makes it a hit area for the link
@mixin pagButtonCurrent {
  background-color: $header-color;
  padding: 7px 10px 8px;
  margin-right: 7px;
  text-decoration: none;
  text-align: center;
}

@mixin textShadow {
  color: $darken-the-footer-color;
  text-shadow: 0px 2px 3px lighten($footer-color, 9);
  border-bottom: 2px dotted $darken-the-footer-color;
}

/*
   ===========
   Mix-ins end
   ===========
 */

/*
=========================================================================
 */

/*
 * ===============
 * Functions start
 * ===============
 */

// Function that determines the gutter width the footer columns 
@function getGutterWidth($base-width) {
  $gutter-widthx2: $base-width - ($footer-column-width-desktop*3);
  $gutter-width: $gutter-widthx2/2;
  @return $gutter-width;
}

/*
 * =============
 * Functions end
 * =============
 */